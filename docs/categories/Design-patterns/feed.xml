<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design patterns on Minko Gechev&#39;s blog</title>
    <link>https://blog.mgechev.com/categories/Design-patterns/</link>
    <description>Recent content in Design patterns on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.mgechev.com/categories/Design-patterns/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design Patterns in Open Source Projects - Part I</title>
      <link>https://blog.mgechev.com/2021/01/18/design-pattens-in-open-source-projects-part-i/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2021/01/18/design-pattens-in-open-source-projects-part-i/</guid>
      <description>I see two common frustrations around design patterns: 1. It&amp;rsquo;s easy to memorize patterns but hard to figure out where and how to use them 2. OOP is lame, and design patterns suck
If the second bullet point resonates with you, this blog post is probably not a good use of your time.
Now let&amp;rsquo;s focus on the first point. It&amp;rsquo;s not easy to understand design patterns just by reading the gang of four book or dummy examples on Wikipedia.</description>
    </item>
    
  </channel>
</rss>