<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open source on Minko Gechev&#39;s blog</title>
    <link>https://blog.mgechev.com/tags/Open-source/</link>
    <description>Recent content in Open source on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.mgechev.com/tags/Open-source/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design Patterns in Open Source Projects - Part II</title>
      <link>https://blog.mgechev.com/2021/01/24/design-pattens-in-open-source-projects-part-ii/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2021/01/24/design-pattens-in-open-source-projects-part-ii/</guid>
      <description>This blog post introduces another design pattern into the context of ngrev. If you&amp;rsquo;re not yet familiar with the project, I&amp;rsquo;d strongly recommend taking 2 minutes to the introduction and &amp;ldquo;Project Overview&amp;rdquo; sections in the first part of the series.
If you did not take the time, ngrev is an Electron app that visualizes the structure of an Angular app, showing the relationships between components, modules, and providers. The UI retrieves the data for each view using an instance of a state object.</description>
    </item>
    
    <item>
      <title>Design Patterns in Open Source Projects - Part I</title>
      <link>https://blog.mgechev.com/2021/01/18/design-pattens-in-open-source-projects-part-i/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2021/01/18/design-pattens-in-open-source-projects-part-i/</guid>
      <description>I see two common frustrations around design patterns:
 It&amp;rsquo;s easy to memorize patterns but hard to figure out where and how to use them OOP is lame, and design patterns suck  If the second bullet point resonates with you, this blog post is probably not a good use of your time.
Now let&amp;rsquo;s focus on the first point. It&amp;rsquo;s not easy to understand design patterns just by reading the gang of four book or dummy examples on Wikipedia.</description>
    </item>
    
    <item>
      <title>Follow Your Dream Career with Open Source. Personal Story.</title>
      <link>https://blog.mgechev.com/2017/12/28/career-development-open-source-get-started/</link>
      <pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2017/12/28/career-development-open-source-get-started/</guid>
      <description>This time I&amp;rsquo;ll violate my principle to write only about purely technical topics on my blog. In the next a couple of paragraphs, I&amp;rsquo;ll talk about open source software development from a personal perspective. Here are some of the ideas that you can find below:
 Explanation what open source software is. The bright sides and dark corners of contributing to open source software projects. Some of the great opportunities that the development of open source software can provide to us, as individuals and professionals.</description>
    </item>
    
  </channel>
</rss>