<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aspects on Minko Gechev&#39;s blog</title>
    <link>https://blog.mgechev.com/tags/Aspects/</link>
    <description>Recent content in Aspects on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jul 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mgechev.com/tags/Aspects/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Aspect-Oriented Programming in JavaScript</title>
      <link>https://blog.mgechev.com/2015/07/29/aspect-oriented-programming-javascript-aop-js/</link>
      <pubDate>Wed, 29 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2015/07/29/aspect-oriented-programming-javascript-aop-js/</guid>
      <description>Note: The following blog post is based on the library aspect.js, which can be found here.
The object-oriented programming paradigm is powerful. We design an OO system by decomposition of the problem domain, following guiding principles concerning the decomposition and the communication between the different modules. The process is structured; it involves logical thinking, understanding of the domain and eventual predictions for the future evolution of the system. Often we&amp;rsquo;re trying to keep our code DRY (not always), highly coherent and loosely coupled.</description>
    </item>
    
  </channel>
</rss>
