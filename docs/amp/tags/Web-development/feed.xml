<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web development on Minko Gechev&#39;s blog</title>
    <link>https://blog.mgechev.com/tags/Web-development/</link>
    <description>Recent content in Web development on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mgechev.com/tags/Web-development/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reactive framework in ~200 lines of JavaScript</title>
      <link>https://blog.mgechev.com/2025/01/09/minimal-reactive-framework/</link>
      <pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2025/01/09/minimal-reactive-framework/</guid>
      <description>One of my current projects is converging Angular and Wiz into the same framework. This is a complex projects that involves a lot of work and many people. It also got me thinking about different client-side rendering models. In this blog post I&amp;rsquo;ll show a very simple library that enables you to develop components with fine-grained reactivity. To make it easier to talk about this library, I called it &amp;ldquo;revolt.&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Managing Angular</title>
      <link>https://blog.mgechev.com/2024/08/25/managing-angular/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2024/08/25/managing-angular/</guid>
      <description>Over the past couple of years, I&amp;rsquo;ve been the product lead for Angular. In this article, I&amp;rsquo;d like to share how we&amp;rsquo;ve been managing the framework. Keep in mind this content lives on my personal blog for a reason - it represents my point of view and doesn&amp;rsquo;t share a complete picture of all the processes within the team, such as people management, program management, etc. Also, that&amp;rsquo;s the second time I&amp;rsquo;m writing this article.</description>
    </item>
    
  </channel>
</rss>
