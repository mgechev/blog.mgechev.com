<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sorting on Minko Gechev&#39;s blog</title>
    <link>https://blog.mgechev.com/categories/Sorting/</link>
    <description>Recent content in Sorting on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Nov 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.mgechev.com/categories/Sorting/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Looking for performance? Probably you should NOT use [].sort (V8)</title>
      <link>https://blog.mgechev.com/2012/11/24/javascript-sorting-performance-quicksort-v8/</link>
      <pubDate>Sat, 24 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mgechev.com/2012/11/24/javascript-sorting-performance-quicksort-v8/</guid>
      <description>A few days ago, I’ve created a GitHub repository. It’s main goal was to collect different algorithms with implementations in JavaScript. I started with basic ones – sorting (insertion, selection, bubble sort..). After that I implemented few “more advance” like marge, quick and heap sort. It was interesting to me how much slower my implementation will be compared to the default sort. It was so interesting because of:
function sort() { [native code] }  That’s why I’ve wrote not optimized version of mergesort and I’ve run it with generated array with 500k elements.</description>
    </item>
    
  </channel>
</rss>