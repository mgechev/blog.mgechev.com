<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flux on Minko Gechev&#39;s blog</title>
    <link>https://blog.mgechev.com/categories/Flux/</link>
    <description>Recent content in Flux on Minko Gechev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Jul 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mgechev.com/categories/Flux/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flux in Depth. Store and Network Communication.</title>
      <link>https://blog.mgechev.com/2015/07/18/flux-in-depth-store-network-communication-services/</link>
      <pubDate>Sat, 18 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://blog.mgechev.com/2015/07/18/flux-in-depth-store-network-communication-services/</guid>
      <description>This is the second, and probably be the last, blog post of the series &amp;ldquo;Flux in Depth&amp;rdquo;. In the first post we did a quick overview of flux, took a look at the stateless, pure components, immutable data structures and component communication. This time, we&amp;rsquo;re going to introduce the store and how we can communicate with services through the network via HTTP, WebSocket or WebRTC. Since the flux architecture doesn&amp;rsquo;t define a way of communication with external services, here you can find my way of dealing with network communication.</description>
    </item>
    <item>
      <title>Flux in Depth. Overview and Components.</title>
      <link>https://blog.mgechev.com/2015/05/15/flux-in-depth-overview-components/</link>
      <pubDate>Fri, 15 May 2015 00:00:00 +0000</pubDate>
      <guid>https://blog.mgechev.com/2015/05/15/flux-in-depth-overview-components/</guid>
      <description>This is the first blog post of the series &amp;ldquo;Flux in Depth&amp;rdquo;. Is this &amp;ldquo;yet the another flux tutorial&amp;rdquo;? What I have seen so far, while researching flux, were mostly &amp;ldquo;how-to&amp;rdquo; tutorials (usually with todo applications), which describe the main components of given flux application and the data flow between them. This is definitely useful for getting a high-level overview of how everything works but in reality there are plenty of other things, which should be taken under consideration.</description>
    </item>
  </channel>
</rss>
